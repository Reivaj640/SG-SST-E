"""
This type stub file was generated by pyright.
"""

import tkinter as tk
from ttkbootstrap.constants import *

"""
    NOTE: https://stackoverflow.com/questions/25467288/pils-imagegrab-is-capturing-at-the-wrong-resolution

    !! This widget is not currently supported on Mac OS
"""
ColorChoice = ...
class ColorDropperDialog:
    """A widget that displays an indicator and a zoom window for
    selecting a color on the screen.

    Left-click the mouse button to select a color. The result is 
    stored in the `result` property as a `ColorChoice` tuple which
    contains named fields for rgb, hsl, and hex color models.

    Zoom in and out on the zoom window by using the mouse wheel.

    This widget is implemented for **Windows** and **Linux** only.

    ![](../../assets/dialogs/color-dropper.png)       

    !!! warning "high resolution displays"
        This widget may not function properly on high resolution
        displays if you are not using the application in high
        resolution mode. This is enabled automatically on Windows.
    """
    def __init__(self) -> None:
        ...
    
    def build_screenshot_canvas(self): # -> None:
        """Build the screenshot canvas"""
        ...
    
    def build_zoom_toplevel(self, master): # -> None:
        """Build the toplevel widget that shows the zoomed version of
        the pixels underneath the mouse cursor."""
        ...
    
    def on_mouse_wheel(self, event: tk.Event): # -> None:
        """Zoom in and out on the image underneath the mouse
        TODO Cross platform testing needed
        """
        ...
    
    def on_left_click(self, _):
        """Capture the color underneath the mouse cursor and destroy
        the toplevel widget"""
        ...
    
    def on_right_click(self, _): # -> None:
        """Close the color dropper without saving any color information"""
        ...
    
    def on_mouse_motion(self, event=...): # -> None:
        """Callback for mouse motion"""
        ...
    
    def get_hover_color(self): # -> str:
        """Get the color that is hovered over by the mouse cursor."""
        ...
    
    def show(self): # -> None:
        """Show the toplevel window"""
        ...
    


