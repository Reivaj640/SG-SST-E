"""
This type stub file was generated by pyright.
"""

from typing import Literal, Optional
from ttkbootstrap.constants import *

class ToolTip:
    """A semi-transparent tooltip popup window that shows text when the
    mouse is hovering over the widget and closes when the mouse is no
    longer hovering over the widget. Clicking a mouse button will also
    close the tooltip.

    ![](../assets/tooltip/tooltip.gif)

    Examples:

        ```python
        import ttkbootstrap as ttk
        from ttkbootstrap.constants import *
        from ttkbootstrap.tooltip import ToolTip

        app = ttk.Window()
        b1 = ttk.Button(app, text="default tooltip")
        b1.pack()
        b2 = ttk.Button(app, text="styled tooltip")
        b2.pack()

        # default tooltip
        ToolTip(b1, text="This is the default style")

        # styled tooltip
        ToolTip(b2, text="This is dangerous", bootstyle=(DANGER, INVERSE))

        app.mainloop()
        ```
    """
    def __init__(self, widget, text=..., padding=..., justify: Literal["left", "center", "right"] = ..., bootstyle=..., wraplength=..., delay=..., image=..., position: Optional[str] = ..., **kwargs) -> None:
        """
        Parameters:

            widget (Widget):
                The tooltip window will position over this widget when
                hovering.

            text (str):
                The text to display in the tooltip window.

            padding (int):
                The padding between the text and the border of the tooltip (default=10).

            bootstyle (str):
                The style to apply to the tooltip label. You can use
                any of the standard ttkbootstrap label styles.

            wraplength (int):
                The width of the tooltip window in screenunits before the
                text is wrapped to the next line. By default, this will be
                a scaled factor of 300.

            position (str):
                If provided, will set the position of the tooltip relative to the widget.
                Valid options include combinations of "left", "right", "top", "bottom",
                and "center" separated by a space. For example: "top left" or "bottom right".
                If not provided, the tooltip will be offset from the mouse pointer.

            **kwargs (Dict):
                Other keyword arguments passed to the `Toplevel` window.
        """
        ...
    
    def enter(self, event=...): # -> None:
        ...
    
    def leave(self, event=...): # -> None:
        ...
    
    def schedule(self): # -> None:
        ...
    
    def unschedule(self): # -> None:
        ...
    
    def show_tip(self, *_): # -> None:
        """Create and show the tooltip window"""
        ...
    
    def move_tip(self, *_): # -> None:
        """Move the tooltip window"""
        ...
    
    def hide_tip(self, *_): # -> None:
        """Destroy the tooltip window."""
        ...
    


if __name__ == "__main__":
    app = ...
    b1 = ...
    b2 = ...
