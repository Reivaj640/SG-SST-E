"""
This type stub file was generated by pyright.
"""

from enum import Enum

class Channel(Enum):
    """A grouping for Publisher subscribers. Indicates whether the
    widget is a legacy `STD` tk widget or a styled `TTK` widget.

    Attributes:

        STD (1):
            Legacy tkinter widgets.

        TTK (2):
            Themed tkinter widgets.
    """
    STD = ...
    TTK = ...


class Subscriber:
    """A subcriber data class used to store information about a specific
    subcriber to the `Publisher`."""
    def __init__(self, name, func, channel) -> None:
        """Create a subscriber.

        Parameters:

            name (str):
                The name of the subscriber

            func (Callable):
                The function to call when messaging.

            channel (Channel):
                The subscription channel.
        """
        ...
    


class Publisher:
    """A class used to publish events for widget updates for theme changes
    or configurations"""
    __subscribers = ...
    @staticmethod
    def subscriber_count(): # -> int:
        ...
    
    @staticmethod
    def subscribe(name, func, channel): # -> None:
        """Subscribe to an event.

        Parameters:

            name (str):
                The widget's tkinter/tcl name.

            func (Callable):
                A function to call when passing a message.

            channel (Channel):
                Indicates the channel grouping the subscribers.
        """
        ...
    
    @staticmethod
    def unsubscribe(name): # -> None:
        """Remove a subscriber

        Parameters:

            name (str):
                The widget's tkinter/tcl name.
        """
        ...
    
    def get_subscribers(channel): # -> list[Any]:
        """Return a list of subscribers

        Returns:

            List:
                List of key-value tuples
        """
        ...
    
    def publish_message(channel, *args): # -> None:
        """Publish a message to all subscribers

        Parameters:

            channel (Channel):
                The name of the channel to subscribe.

            **args:
                optional arguments to pass to the subscribers.
        """
        ...
    
    @staticmethod
    def clear_subscribers(): # -> None:
        """Reset all subscriptions."""
        ...
    


